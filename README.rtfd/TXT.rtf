{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red53\green57\blue63;
\red44\green68\blue135;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c26763\c28730\c31410;
\cssrgb\c22331\c34940\c59983;}
\margl1440\margr1440\vieww16800\viewh12220\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. Meme Generator\
2. Memes for all!\
3. {{\NeXTGraphic Screen Shot 2019-12-08 at 11.54.18 PM.png \width7280 \height15180 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}{{\NeXTGraphic Screen Shot 2019-12-08 at 11.54.04 PM.png \width7400 \height15180 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}{{\NeXTGraphic Screen Shot 2019-12-08 at 11.54.09 PM.png \width7420 \height15340 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}{{\NeXTGraphic Screen Shot 2019-12-08 at 11.52.18 PM.png \width7320 \height15200 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
4. \
5. We have a login function, where each user has an account and they can create memes. There is also a signup function if the account does not already exist. After the user logs in, they navigate to a history page, where they can see their past creations. There is a delete function as well as a create function, which takes them to another page. The create page allows you to select an image background and put text onto it. \
6. \
	iOS: We use NSLayoutConstraint for all of our UI attributes. We have 2 collection views, one to 	show meme history, one to show memes able to edit in create window. We have navigation 	between all views, either using buttons or navigation bar controllers. Our code runs based on 	the based on the API that our backend wrote.  \
	Backend: \cf2 \cb3 \expnd0\expndtw0\kerning0
To design the API, we talked about what the app should do with the iOS members 	and made a list of needed functionalities. We used database modeling using SQLAlchemy, 	making a table for users and a table for memes that use a foreign key relationship to link the 	user to their created memes. We used imgflip\'92s meme generator api to pass in parameters iOS 	gives us to create memes and return the url of the meme. We had to add new methods as iOS 	found that they needed more functionalities. We deployed to Google Cloud. It is running on the 	ip {\field{\*\fldinst{HYPERLINK "https://l.facebook.com/l.php?u=http%3A%2F%2F34.73.20.1%2F%3Ffbclid%3DIwAR1UGBZ21yQMZXrP9RF571nynkgHYeXwmnRYOeyFPnWqMcq1BM7EAGtNOfQ&h=AT2PHUqjuCASMhxSIE39cm9iL2rHXptN9pIMacXAwjscjT6GahE2xZtkXBZlJ0x4_DHyng6fWaNHn2G1c6lYeXtwP7jYNYJPGlKmFL7a-3cJgH0wx9_vD_C74IIHEG_20wwDpZBqNG4"}}{\fldrslt \cf2 \cb3 34.73.20.1}}\cf0 \cb1 \kerning1\expnd0\expndtw0 \
7. When you first login after creating an account, it may give a failed notice. This is because the code in Xcode gets a response before the server gives one. Just press login again and it will go through (assuming you have a valid login).}